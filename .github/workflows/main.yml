# This is a basic workflow to help you get started with Actions

name: pythonCI

on:
  push:
    branches: [ "v0.0" ]
  pull_request:
    branches: [ "v0.0" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.9.7
      uses: actions/setup-python@v4
      with:
        python-version: "3.9.7"
    - name: Install poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
        installer-parallel: true
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v3
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
    - name: Install library
      run: poetry install --no-interaction
    - name: Lint with flake8
      run: |
        poetry run flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        poetry run flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: |
        poetry run pytest --cov --junitxml=pytest.xml --cov-report=term-missing:skip-covered | tee pytest-coverage.txt
    - name: Create Coverage Comment
      id: coverageComment
      uses: MishaKav/pytest-coverage-comment@main
      with:
        pytest-coverage-path: pytest-coverage.txt
        junitxml-path: ./pytest.xml
    - name: Create Coverage Badge
      uses: schneegans/dynamic-badges-action@v1.3.0
      with:
        auth: ${{ secrets.BADGE_GIST }}
        gistID: e4a0ff4f337e6d7b3f3bf23c179f3170
        filename: pytest-coverage-comment.json
        label: Coverage
        message: ${{ steps.coverageComment.outputs.coverage }}
        color: ${{ steps.coverageComment.outputs.color }}
        namedLogo: python
